# SCRIPT ULTRA-SIMPLE - PAS D'ERREURS
Write-Host "üöÄ SCRIPT SIMPLE" -ForegroundColor Green

# √âtape 1: V√©rifier Sui
Write-Host "1. V√©rification de Sui..." -ForegroundColor Yellow
try {
    sui --version
    Write-Host "‚úÖ Sui install√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Sui pas install√©!" -ForegroundColor Red
    Write-Host "Installez Sui d'abord: https://docs.sui.io/build/install" -ForegroundColor Red
    exit 1
}

# √âtape 2: Build
Write-Host "2. Construction..." -ForegroundColor Yellow
sui move build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur de build" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Build OK" -ForegroundColor Green

# √âtape 3: Deploy
Write-Host "3. D√©ploiement..." -ForegroundColor Yellow
$result = sui client publish --gas-budget 100000000
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur de d√©ploiement" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ D√©ploiement OK" -ForegroundColor Green

# √âtape 4: Extraire Package ID
Write-Host "4. Extraction Package ID..." -ForegroundColor Yellow
$packageId = ($result | Select-String "0x[a-f0-9]{64}").Matches[0].Value
Write-Host "üì¶ Package ID: $packageId" -ForegroundColor Cyan

# √âtape 5: Sauvegarder
$packageId | Out-File -FilePath "package_id.txt" -Encoding UTF8
Write-Host "üíæ Package ID sauvegard√©" -ForegroundColor Green

Write-Host "üéâ TERMIN√â! Package ID: $packageId" -ForegroundColor Green
Write-Host "Maintenant testez avec votre frontend!" -ForegroundColor Yellow

